name: "test"

on: [push]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2025]
        cc: [gcc, clang]
        exclude:
        - os: macos-latest
          cc: gcc
    runs-on: ${{matrix.os}}
    env:
      CC: ${{matrix.cc}}
      CFLAGS: -Wextra -Werror -Wno-implicit-fallthrough
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: 0
    - name: Show C compiler information
      run: ${{matrix.cc}} -v
    - name: Compile
      run: make CC=${{matrix.cc}}
    - name: Test
      run: make test CC=${{matrix.cc}}
    - name: Install (Unix)
      if: ${{ matrix.os != 'windows-2025' }}
      run: sudo make install
    - name: Install (Windows)
      if: ${{ matrix.os == 'windows-2025' }}
      run: make install
    - name: Run hello world example
      if: ${{ matrix.os != 'windows-2025' }}
      run: nelua --verbose examples/helloworld.nelua

  test-32bits:
    runs-on: ubuntu-latest
    env:
      CFLAGS: -m32
    steps:
    - uses: actions/checkout@master
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install gcc-multilib
    - name: Compile
      run: make
    - name: Test
      run: make test

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: leafo/gh-actions-lua@v11
    - uses: leafo/gh-actions-luarocks@v5
    - name: Install luacov
      run: luarocks install cluacov
    - name: Coverage
      run: |
        echo "return {}" > .neluacfg.lua
        make coverage-test

  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: leafo/gh-actions-lua@v11
    - uses: leafo/gh-actions-luarocks@v5
    - name: Install luacheck
      run: luarocks install luacheck
    - name: Check
      run: luacheck .

  sanitize:
    runs-on: ubuntu-latest
    env:
      CFLAGS: -fsanitize=address -fsanitize=undefined
    steps:
    - uses: actions/checkout@master
    - name: Compile
      run: make
    - name: Test
      run: make test
